buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.johnrengelman:shadow:8.1.1"
    }
}

plugins {
    id 'java'
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

apply plugin: "com.github.johnrengelman.shadow"

group = 'ru.dverkask'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name 'codemc'
        url 'https://repo.codemc.org/repository/maven-public/'
    }
}

dependencies {
    implementation project(path: ':api')
    compileOnly 'org.json:json:20090211'

    compileOnly "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"

    compileOnly "net.skinsrestorer:skinsrestorer-api:15.0.4"
    compileOnly 'com.google.code.gson:gson:2.7'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

jar {
    archiveFileName = 'SkinAnatomy.jar'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}