plugins {
    id 'java'
    id("io.papermc.paperweight.userdev") version "1.5.5"
}

group = 'ru.dverkask'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name 'codemc'
        url 'https://repo.codemc.org/repository/maven-public/'
    }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT"
    paperweightDevelopmentBundle "io.papermc.paper:dev-bundle:1.20-R0.1-SNAPSHOT"

    compileOnly "net.skinsrestorer:skinsrestorer-api:15.0.4"

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

def targetJavaVersion = 17

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.jar {
    archiveFileName.set('SkinAnatomy.jar')
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}